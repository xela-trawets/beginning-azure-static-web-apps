@page "/"
@inject BlogPostSummaryService service
@inject HttpClient http
@using Models
@using StaticWebAppAuthentication.Models
@using System.Text.Json;

<PageTitle>Index</PageTitle>
<div>
	@UserInfo
</div>
@if (service.Summaries is null) {
	<div>Loading...</div>
}
else {
	<div>
		<h2>RecentBlog Post</h2>
		@if (Summary is null) {
			<p class="byline">NoBlog posts found 😢</p>
		}
		else {
			<div class="home-page">
				<BlogPostSummary Summary="@Summary" />
			</div>
		}
	</div>
}

@code {
	private BlogPost? Summary =>
		service.Summaries?
		.OrderByDescending(bps => bps.PublishedDate)
		.FirstOrDefault();
	private string UserInfo = "";

	protected override async Task OnInitializedAsync()
	{
		UserInfo = await GetUserInfo();
		//await service.LoadBlogPostSummaries();
	}
	private async Task<string> GetUserInfo()
	{
		var data = await http.GetFromJsonAsync<AuthenticationData>("/.auth/me");
		var clientPrincipal = data?.ClientPrincipal ?? new ClientPrincipal();
		return JsonSerializer.Serialize(clientPrincipal, new JsonSerializerOptions() { WriteIndented = true });
	}
}

